{"version":3,"file":"index.umd.js","sources":["../lib/key-enum.ts","../lib/index.tsx"],"sourcesContent":["export enum KeyEnum {\n  TAB = 'Tab',\n  ENTER = 'Enter',\n  ARROW_UP = 'ArrowUp',\n  ARROW_DOWN = 'ArrowDown',\n}\n","import React, { useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { KeyEnum } from './key-enum';\nimport styles from './index.module.css';\n\nexport interface Props {\n  value?: string;\n  dataSource: DataSourceItem[];\n  className?: string;\n  style?: React.CSSProperties;\n  placeholder?: string;\n  disabled?: boolean;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  onChange?: (value: string) => void;\n  onPressEnter?: (value: string) => void;\n  onSelect?: (item: DataSourceItem) => void;\n}\n\nexport interface DataSourceItem {\n  text: string;\n  value: string | number;\n  [key: string]: any;\n}\n\nconst Autocomplete: React.ForwardRefRenderFunction<HTMLInputElement, Props> = (props, ref) => {\n  const {\n    value,\n    dataSource,\n    className,\n    onBlur,\n    onFocus,\n    onChange,\n    onPressEnter,\n    onSelect,\n    ...others\n  } = props;\n  let [_value, setValue] = useState('');\n  let [matchedDataSource, setMatchedDataSource] = useState<DataSourceItem[]>();\n  let [activeIndex, setActiveIndex] = useState(0);\n  let controlledValue = value ?? _value;\n\n  const inputRef = useRef<HTMLInputElement>();\n  React.useImperativeHandle(ref, () => inputRef.current!);\n\n  const updateValue = (value: string) => {\n    onChange && onChange(value);\n    setValue(value);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    updateValue(value);\n\n    if (!value) return setMatchedDataSource([]);\n    setActiveIndex(0);\n    setMatchedDataSource(\n      dataSource.filter((i) => {\n        return i.text.startsWith(value) && i.text !== value;\n      })\n    );\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (Object.values(KeyEnum).includes(e.key as KeyEnum)) {\n      e.preventDefault();\n    }\n\n    switch (e.key) {\n      case KeyEnum.TAB:\n        let matchedDataSourceItem = matchedDataSource?.[activeIndex];\n        if (!matchedDataSourceItem) return;\n\n        updateValue(matchedDataSourceItem.text);\n        onSelect && onSelect(matchedDataSourceItem);\n        setMatchedDataSource([]);\n        break;\n      case KeyEnum.ARROW_UP:\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx - 1 + matchedDataSource.length) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      case KeyEnum.ARROW_DOWN:\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx + 1) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      case KeyEnum.ENTER:\n        onPressEnter && onPressEnter(controlledValue);\n        setMatchedDataSource([]);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const wrapClassString = classNames('ria-wrap', styles.wrap, className);\n  const inputClassString = classNames('ria-input', styles.input);\n  const completeClassString = classNames('ria-complete', styles.complete);\n\n  return (\n    <div className={wrapClassString}>\n      <input\n        ref={inputRef as any}\n        className={inputClassString}\n        value={controlledValue}\n        type=\"text\"\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        {...others}\n      />\n      <div className={completeClassString}>{matchedDataSource?.[activeIndex]?.text}</div>\n    </div>\n  );\n};\n\nconst RefAutoComplete = React.forwardRef<HTMLInputElement, Props>(Autocomplete);\nexport default RefAutoComplete;\n"],"names":["KeyEnum","Autocomplete","props","ref","value","dataSource","className","onBlur","onFocus","onChange","onPressEnter","onSelect","others","useState","_value","setValue","matchedDataSource","setMatchedDataSource","activeIndex","setActiveIndex","controlledValue","inputRef","useRef","React","useImperativeHandle","current","updateValue","handleChange","e","target","filter","i","text","startsWith","handleKeyDown","Object","values","includes","key","preventDefault","TAB","matchedDataSourceItem","ARROW_UP","idx","length","ARROW_DOWN","ENTER","wrapClassString","classNames","styles","wrap","inputClassString","input","completeClassString","complete","type","onKeyDown","RefAutoComplete","forwardRef"],"mappings":"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"}