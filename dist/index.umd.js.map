{"version":3,"file":"index.umd.js","sources":["../lib/key-enum.ts","../lib/index.tsx"],"sourcesContent":["export enum KeyEnum {\r\n  TAB = 'Tab',\r\n  ENTER = 'Enter',\r\n  ARROW_UP = 'ArrowUp',\r\n  ARROW_DOWN = 'ArrowDown',\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport ignoreCase from 'ignore-case';\r\nimport { KeyEnum } from './key-enum';\r\nimport styles from './index.module.css';\r\n\r\nexport interface Props {\r\n  value?: string;\r\n  dataSource: DataSourceItem[];\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  navigate?: boolean;\r\n  caseSensitive?: boolean;\r\n  onBlur?: () => void;\r\n  onFocus?: () => void;\r\n  onChange?: (value: string) => void;\r\n  onPressEnter?: (value: string) => void;\r\n  onSelect?: (item: DataSourceItem) => void;\r\n}\r\n\r\nexport interface DataSourceItem {\r\n  text: string;\r\n  value: string | number;\r\n  [key: string]: any;\r\n}\r\n\r\nconst Autocomplete: React.ForwardRefRenderFunction<HTMLInputElement, Props> = (props, ref) => {\r\n  const {\r\n    value,\r\n    dataSource,\r\n    className,\r\n    navigate = true,\r\n    caseSensitive = true,\r\n    onBlur,\r\n    onFocus,\r\n    onChange,\r\n    onPressEnter,\r\n    onSelect,\r\n    ...others\r\n  } = props;\r\n  const [innerVal, setInnerVal] = useState('');\r\n  const [matchedDataSource, setMatchedDataSource] = useState<DataSourceItem[]>();\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const ctrlValue = value ?? innerVal;\r\n\r\n  /**\r\n   * inputRef\r\n   */\r\n  const inputRef = useRef<HTMLInputElement>();\r\n  React.useImperativeHandle(ref, () => inputRef.current!);\r\n\r\n  const updateValue = (value: string) => {\r\n    onChange && onChange(value);\r\n    setInnerVal(value);\r\n  };\r\n\r\n  const updateMatchedDataSource = (value?: string) => {\r\n    setActiveIndex(0);\r\n    value\r\n      ? setMatchedDataSource(\r\n          dataSource.filter(({ text }) => {\r\n            return caseSensitive\r\n              ? text.startsWith(value) && text !== value\r\n              : ignoreCase.startsWith(text, value) && !ignoreCase.equals(text, value);\r\n          })\r\n        )\r\n      : setMatchedDataSource([]);\r\n  };\r\n\r\n  /**\r\n   * InputChange Handler\r\n   * @param e\r\n   */\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n    updateValue(value);\r\n    updateMatchedDataSource(value);\r\n  };\r\n\r\n  /**\r\n   * KeyDown Handler\r\n   * deal with `Tab` | `Enter` | `ArrowUp` | `ArrowDown`\r\n   * @param e\r\n   */\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (Object.values(KeyEnum).includes(e.key as KeyEnum)) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    switch (e.key) {\r\n      case KeyEnum.TAB:\r\n        const matchedDataSourceItem = matchedDataSource?.[activeIndex];\r\n        if (!matchedDataSourceItem) return;\r\n\r\n        /**\r\n         * onChange >>> onSelect >>> Search matched item\r\n         */\r\n        const { text } = matchedDataSourceItem;\r\n        updateValue(text);\r\n        onSelect && onSelect(matchedDataSourceItem);\r\n        updateMatchedDataSource(text);\r\n        break;\r\n      case KeyEnum.ENTER:\r\n        /**\r\n         * onPressEnter >>> Reset\r\n         */\r\n        onPressEnter && onPressEnter(ctrlValue);\r\n        updateMatchedDataSource();\r\n        break;\r\n      case KeyEnum.ARROW_UP:\r\n        if (!navigate) break;\r\n\r\n        setActiveIndex((idx) => {\r\n          if (matchedDataSource?.length) {\r\n            return (idx - 1 + matchedDataSource.length) % matchedDataSource.length;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n      case KeyEnum.ARROW_DOWN:\r\n        if (!navigate) break;\r\n\r\n        setActiveIndex((idx) => {\r\n          if (matchedDataSource?.length) {\r\n            return (idx + 1) % matchedDataSource.length;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const breakUp = () => {\r\n    return matchedDataSource?.[activeIndex]?.text\r\n      ? `${ctrlValue}${matchedDataSource[activeIndex].text.slice(ctrlValue.length)}`\r\n      : undefined;\r\n  };\r\n\r\n  const wrapClassString = classNames('ria-wrap', styles.wrap, className); // `className` should cover `styles.wrap`\r\n  const inputClassString = classNames('ria-input', styles.input);\r\n  const completeClassString = classNames('ria-complete', styles.complete);\r\n  const completeContent = breakUp();\r\n\r\n  return (\r\n    <div className={wrapClassString}>\r\n      <input\r\n        ref={inputRef as any}\r\n        className={inputClassString}\r\n        value={ctrlValue}\r\n        type=\"text\"\r\n        onBlur={onBlur}\r\n        onFocus={onFocus}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        {...others}\r\n      />\r\n      <div className={completeClassString}>{completeContent}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RefAutoComplete = React.forwardRef<HTMLInputElement, Props>(Autocomplete);\r\nexport { RefAutoComplete as InlineAutocomplete };\r\n\r\nconst TextAreaAutocomplete: React.ForwardRefRenderFunction<HTMLTextAreaElement, Props> = (props, ref) => {\r\n  const {\r\n    value,\r\n    dataSource,\r\n    className,\r\n    navigate = true,\r\n    caseSensitive = true,\r\n    onBlur,\r\n    onFocus,\r\n    onChange,\r\n    onPressEnter,\r\n    onSelect,\r\n    ...others\r\n  } = props;\r\n  const [innerVal, setInnerVal] = useState('');\r\n  const [matchedDataSource, setMatchedDataSource] = useState<DataSourceItem[]>();\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const ctrlValue = value ?? innerVal;\r\n\r\n  /**\r\n   * inputRef\r\n   */\r\n  const inputRef = useRef<HTMLTextAreaElement>();\r\n  React.useImperativeHandle(ref, () => inputRef.current!);\r\n\r\n  const updateValue = (value: string) => {\r\n    onChange && onChange(value);\r\n    setInnerVal(value);\r\n  };\r\n\r\n  const updateMatchedDataSource = (value?: string) => {\r\n    setActiveIndex(0);\r\n    value\r\n      ? setMatchedDataSource(\r\n          dataSource.filter(({ text }) => {\r\n            return caseSensitive\r\n              ? text.startsWith(value) && text !== value\r\n              : ignoreCase.startsWith(text, value) && !ignoreCase.equals(text, value);\r\n          })\r\n        )\r\n      : setMatchedDataSource([]);\r\n  };\r\n\r\n  /**\r\n   * InputChange Handler\r\n   * @param e\r\n   */\r\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const value = e.target.value;\r\n    updateValue(value);\r\n    updateMatchedDataSource(value);\r\n  };\r\n\r\n  /**\r\n   * KeyDown Handler\r\n   * deal with `Tab` | `Enter` | `ArrowUp` | `ArrowDown`\r\n   * @param e\r\n   */\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (Object.values(KeyEnum).includes(e.key as KeyEnum)) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    switch (e.key) {\r\n      case KeyEnum.TAB:\r\n        const matchedDataSourceItem = matchedDataSource?.[activeIndex];\r\n        if (!matchedDataSourceItem) return;\r\n\r\n        /**\r\n         * onChange >>> onSelect >>> Search matched item\r\n         */\r\n        const { text } = matchedDataSourceItem;\r\n        updateValue(text);\r\n        onSelect && onSelect(matchedDataSourceItem);\r\n        updateMatchedDataSource(text);\r\n        break;\r\n      case KeyEnum.ENTER:\r\n        /**\r\n         * onPressEnter >>> Just add a new line\r\n         */\r\n        updateValue(`${ctrlValue}\\n`);\r\n\r\n        break;\r\n      case KeyEnum.ARROW_UP:\r\n        if (!navigate) break;\r\n\r\n        setActiveIndex((idx) => {\r\n          if (matchedDataSource?.length) {\r\n            return (idx - 1 + matchedDataSource.length) % matchedDataSource.length;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n      case KeyEnum.ARROW_DOWN:\r\n        if (!navigate) break;\r\n\r\n        setActiveIndex((idx) => {\r\n          if (matchedDataSource?.length) {\r\n            return (idx + 1) % matchedDataSource.length;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const breakUp = () => {\r\n    return matchedDataSource?.[activeIndex]?.text\r\n      ? `${ctrlValue}${matchedDataSource[activeIndex].text.slice(ctrlValue.length)}`\r\n      : undefined;\r\n  };\r\n\r\n  const wrapClassString = classNames('ria-wrap', styles.wrap, className); // `className` should cover `styles.wrap`\r\n  const inputClassString = classNames('ria-input', styles.input);\r\n  const completeClassString = classNames('ria-complete', styles.complete);\r\n  const completeContent = breakUp();\r\n\r\n  return (\r\n    <div className={wrapClassString}>\r\n      <textarea\r\n        ref={inputRef as any}\r\n        className={inputClassString}\r\n        value={ctrlValue}\r\n        onBlur={onBlur}\r\n        onFocus={onFocus}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        {...others}\r\n      />\r\n      <div className={completeClassString}>{completeContent}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RefTextAreaAutocomplete = React.forwardRef<HTMLTextAreaElement, Props>(TextAreaAutocomplete);\r\nexport { RefTextAreaAutocomplete as TextAreaAutocomplete };\r\n"],"names":["KeyEnum","Autocomplete","props","ref","value","dataSource","className","_props$navigate","navigate","_props$caseSensitive","caseSensitive","onBlur","onFocus","onChange","onPressEnter","onSelect","others","_objectWithoutPropertiesLoose","_excluded","_useState","useState","innerVal","setInnerVal","_useState2","matchedDataSource","setMatchedDataSource","_useState3","activeIndex","setActiveIndex","ctrlValue","inputRef","useRef","React","useImperativeHandle","current","updateValue","updateMatchedDataSource","filter","_ref","text","startsWith","ignoreCase","equals","handleChange","e","target","handleKeyDown","Object","values","includes","key","preventDefault","TAB","matchedDataSourceItem","ENTER","ARROW_UP","idx","length","ARROW_DOWN","breakUp","_matchedDataSource$ac","slice","undefined","wrapClassString","classNames","styles","wrap","inputClassString","input","completeClassString","complete","completeContent","type","onKeyDown","RefAutoComplete","forwardRef","TextAreaAutocomplete","_props$navigate2","_props$caseSensitive2","_excluded2","_useState4","_useState5","_useState6","_ref2","_matchedDataSource$ac2","RefTextAreaAutocomplete"],"mappings":"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"}