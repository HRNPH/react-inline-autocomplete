{"version":3,"file":"index.modern.js","sources":["../lib/key-enum.ts","../lib/index.tsx"],"sourcesContent":["export enum KeyEnum {\n  TAB = 'Tab',\n  ENTER = 'Enter',\n  ARROW_UP = 'ArrowUp',\n  ARROW_DOWN = 'ArrowDown',\n}\n","import React, { useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport ignoreCase from 'ignore-case';\nimport { KeyEnum } from './key-enum';\nimport styles from './index.module.css';\n\nexport interface Props {\n  value?: string;\n  dataSource: DataSourceItem[];\n  className?: string;\n  style?: React.CSSProperties;\n  placeholder?: string;\n  disabled?: boolean;\n  navigate?: boolean;\n  caseSensitive?: boolean;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  onChange?: (value: string) => void;\n  onPressEnter?: (value: string) => void;\n  onSelect?: (item: DataSourceItem) => void;\n}\n\nexport interface DataSourceItem {\n  text: string;\n  value: string | number;\n  [key: string]: any;\n}\n\nconst Autocomplete: React.ForwardRefRenderFunction<HTMLInputElement, Props> = (props, ref) => {\n  const {\n    value,\n    dataSource,\n    className,\n    navigate = true,\n    caseSensitive = true,\n    onBlur,\n    onFocus,\n    onChange,\n    onPressEnter,\n    onSelect,\n    ...others\n  } = props;\n  const [innerVal, setInnerVal] = useState('');\n  const [matchedDataSource, setMatchedDataSource] = useState<DataSourceItem[]>();\n  const [activeIndex, setActiveIndex] = useState(0);\n  const ctrlValue = value ?? innerVal;\n\n  /**\n   * inputRef\n   */\n  const inputRef = useRef<HTMLInputElement>();\n  React.useImperativeHandle(ref, () => inputRef.current!);\n\n  const updateValue = (value: string) => {\n    onChange && onChange(value);\n    setInnerVal(value);\n  };\n\n  const updateMatchedDataSource = (value?: string) => {\n    setActiveIndex(0);\n    value\n      ? setMatchedDataSource(\n          dataSource.filter(({ text }) => {\n            return caseSensitive\n              ? text.startsWith(value) && text !== value\n              : ignoreCase.startsWith(text, value) && !ignoreCase.equals(text, value);\n          })\n        )\n      : setMatchedDataSource([]);\n  };\n\n  /**\n   * InputChange Handler\n   * @param e\n   */\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    updateValue(value);\n    updateMatchedDataSource(value);\n  };\n\n  /**\n   * KeyDown Handler\n   * deal with `Tab` | `Enter` | `ArrowUp` | `ArrowDown`\n   * @param e\n   */\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (Object.values(KeyEnum).includes(e.key as KeyEnum)) {\n      e.preventDefault();\n    }\n\n    switch (e.key) {\n      case KeyEnum.TAB:\n        const matchedDataSourceItem = matchedDataSource?.[activeIndex];\n        if (!matchedDataSourceItem) return;\n\n        /**\n         * onChange >>> onSelect >>> Search matched item\n         */\n        const { text } = matchedDataSourceItem;\n        updateValue(text);\n        onSelect && onSelect(matchedDataSourceItem);\n        updateMatchedDataSource(text);\n        break;\n      case KeyEnum.ENTER:\n        /**\n         * onPressEnter >>> Reset\n         */\n        onPressEnter && onPressEnter(ctrlValue);\n        updateMatchedDataSource();\n        break;\n      case KeyEnum.ARROW_UP:\n        if (!navigate) break;\n\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx - 1 + matchedDataSource.length) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      case KeyEnum.ARROW_DOWN:\n        if (!navigate) break;\n\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx + 1) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const breakUp = () => {\n    return matchedDataSource?.[activeIndex]?.text\n      ? `${ctrlValue}${matchedDataSource[activeIndex].text.slice(ctrlValue.length)}`\n      : undefined;\n  };\n\n  const wrapClassString = classNames('ria-wrap', styles.wrap, className); // `className` should cover `styles.wrap`\n  const inputClassString = classNames('ria-input', styles.input);\n  const completeClassString = classNames('ria-complete', styles.complete);\n  const completeContent = breakUp();\n\n  return (\n    <div className={wrapClassString}>\n      <input\n        ref={inputRef as any}\n        className={inputClassString}\n        value={ctrlValue}\n        type=\"text\"\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        {...others}\n      />\n      <div className={completeClassString}>{completeContent}</div>\n    </div>\n  );\n};\n\nconst RefAutoComplete = React.forwardRef<HTMLInputElement, Props>(Autocomplete);\nexport default RefAutoComplete;\n"],"names":["KeyEnum","Autocomplete","props","ref","value","dataSource","className","navigate","caseSensitive","onBlur","onFocus","onChange","onPressEnter","onSelect","others","innerVal","setInnerVal","useState","matchedDataSource","setMatchedDataSource","activeIndex","setActiveIndex","ctrlValue","inputRef","useRef","React","useImperativeHandle","current","updateValue","updateMatchedDataSource","filter","text","startsWith","ignoreCase","equals","handleChange","e","target","handleKeyDown","Object","values","includes","key","preventDefault","TAB","matchedDataSourceItem","ENTER","ARROW_UP","idx","length","ARROW_DOWN","breakUp","slice","undefined","wrapClassString","classNames","styles","wrap","inputClassString","input","completeClassString","complete","completeContent","type","onKeyDown","RefAutoComplete","forwardRef"],"mappings":"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"}