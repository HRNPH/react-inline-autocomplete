{"version":3,"file":"index.modern.js","sources":["../lib/key-enum.ts","../lib/index.tsx"],"sourcesContent":["export enum KeyEnum {\r\n  TAB = 'Tab',\r\n  ENTER = 'Enter',\r\n  ARROW_UP = 'ArrowUp',\r\n  ARROW_DOWN = 'ArrowDown',\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport ignoreCase from 'ignore-case';\r\nimport { KeyEnum } from './key-enum';\r\nimport styles from './index.module.css';\r\n\r\nexport interface Props {\r\n  value?: string;\r\n  dataSource: DataSourceItem[];\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  navigate?: boolean;\r\n  caseSensitive?: boolean;\r\n  onBlur?: () => void;\r\n  onFocus?: () => void;\r\n  onChange?: (value: string) => void;\r\n  onPressEnter?: (value: string) => void;\r\n  onSelect?: (item: DataSourceItem) => void;\r\n}\r\n\r\nexport interface DataSourceItem {\r\n  text: string;\r\n  value: string | number;\r\n  [key: string]: any;\r\n}\r\n\r\nconst Autocomplete: React.ForwardRefRenderFunction<HTMLInputElement, Props> = (props, ref) => {\r\n  const {\r\n    value,\r\n    dataSource,\r\n    className,\r\n    navigate = true,\r\n    caseSensitive = true,\r\n    onBlur,\r\n    onFocus,\r\n    onChange,\r\n    onPressEnter,\r\n    onSelect,\r\n    ...others\r\n  } = props;\r\n  const [innerVal, setInnerVal] = useState('');\r\n  const [matchedDataSource, setMatchedDataSource] = useState<DataSourceItem[]>();\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const ctrlValue = value ?? innerVal;\r\n\r\n  /**\r\n   * inputRef\r\n   */\r\n  const inputRef = useRef<HTMLInputElement>();\r\n  React.useImperativeHandle(ref, () => inputRef.current!);\r\n\r\n  const updateValue = (value: string) => {\r\n    onChange && onChange(value);\r\n    setInnerVal(value);\r\n  };\r\n\r\n  const updateMatchedDataSource = (value?: string) => {\r\n    setActiveIndex(0);\r\n    value\r\n      ? setMatchedDataSource(\r\n          dataSource.filter(({ text }) => {\r\n            return caseSensitive\r\n              ? text.startsWith(value) && text !== value\r\n              : ignoreCase.startsWith(text, value) && !ignoreCase.equals(text, value);\r\n          })\r\n        )\r\n      : setMatchedDataSource([]);\r\n  };\r\n\r\n  /**\r\n   * InputChange Handler\r\n   * @param e\r\n   */\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n    updateValue(value);\r\n    updateMatchedDataSource(value);\r\n  };\r\n\r\n  /**\r\n   * KeyDown Handler\r\n   * deal with `Tab` | `Enter` | `ArrowUp` | `ArrowDown`\r\n   * @param e\r\n   */\r\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (Object.values(KeyEnum).includes(e.key as KeyEnum)) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    switch (e.key) {\r\n      case KeyEnum.TAB:\r\n        const matchedDataSourceItem = matchedDataSource?.[activeIndex];\r\n        if (!matchedDataSourceItem) return;\r\n\r\n        /**\r\n         * onChange >>> onSelect >>> Search matched item\r\n         */\r\n        const { text } = matchedDataSourceItem;\r\n        updateValue(text);\r\n        onSelect && onSelect(matchedDataSourceItem);\r\n        updateMatchedDataSource(text);\r\n        break;\r\n      case KeyEnum.ENTER:\r\n        /**\r\n         * onPressEnter >>> Reset\r\n         */\r\n        onPressEnter && onPressEnter(ctrlValue);\r\n        updateMatchedDataSource();\r\n        break;\r\n      case KeyEnum.ARROW_UP:\r\n        if (!navigate) break;\r\n\r\n        setActiveIndex((idx) => {\r\n          if (matchedDataSource?.length) {\r\n            return (idx - 1 + matchedDataSource.length) % matchedDataSource.length;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n      case KeyEnum.ARROW_DOWN:\r\n        if (!navigate) break;\r\n\r\n        setActiveIndex((idx) => {\r\n          if (matchedDataSource?.length) {\r\n            return (idx + 1) % matchedDataSource.length;\r\n          }\r\n          return 0;\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const breakUp = () => {\r\n    return matchedDataSource?.[activeIndex]?.text\r\n      ? `${ctrlValue}${matchedDataSource[activeIndex].text.slice(ctrlValue.length)}`\r\n      : undefined;\r\n  };\r\n\r\n  const wrapClassString = classNames('ria-wrap', styles.wrap, className); // `className` should cover `styles.wrap`\r\n  const inputClassString = classNames('ria-input', styles.input);\r\n  const completeClassString = classNames('ria-complete', styles.complete);\r\n  const completeContent = breakUp();\r\n\r\n  return (\r\n    <div className={wrapClassString}>\r\n      <input\r\n        ref={inputRef as any}\r\n        className={inputClassString}\r\n        value={ctrlValue}\r\n        type=\"text\"\r\n        onBlur={onBlur}\r\n        onFocus={onFocus}\r\n        onChange={handleChange}\r\n        onKeyDown={handleKeyDown}\r\n        {...others}\r\n      />\r\n      <div className={completeClassString}>{completeContent}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RefAutoComplete = React.forwardRef<HTMLInputElement, Props>(Autocomplete);\r\nexport default RefAutoComplete;\r\n"],"names":["KeyEnum","Autocomplete","props","ref","value","dataSource","className","navigate","caseSensitive","onBlur","onFocus","onChange","onPressEnter","onSelect","others","_objectWithoutPropertiesLoose","_excluded","innerVal","setInnerVal","useState","matchedDataSource","setMatchedDataSource","activeIndex","setActiveIndex","ctrlValue","inputRef","useRef","React","useImperativeHandle","current","updateValue","updateMatchedDataSource","filter","text","startsWith","ignoreCase","equals","handleChange","e","target","handleKeyDown","Object","values","includes","key","preventDefault","TAB","matchedDataSourceItem","ENTER","ARROW_UP","idx","length","ARROW_DOWN","breakUp","_matchedDataSource$ac","slice","undefined","wrapClassString","classNames","styles","wrap","inputClassString","input","completeClassString","complete","completeContent","type","onKeyDown","RefAutoComplete","forwardRef"],"mappings":"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"}