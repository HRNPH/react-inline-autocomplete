{"version":3,"file":"index.modern.js","sources":["../lib/key-enum.ts","../lib/index.tsx"],"sourcesContent":["export enum KeyEnum {\n  TAB = 'Tab',\n  ENTER = 'Enter',\n  ARROW_UP = 'ArrowUp',\n  ARROW_DOWN = 'ArrowDown',\n}\n","import React, { useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { KeyEnum } from './key-enum';\nimport styles from './index.module.css';\n\nexport interface Props {\n  value?: string;\n  dataSource: DataSourceItem[];\n  className?: string;\n  style?: React.CSSProperties;\n  placeholder?: string;\n  disabled?: boolean;\n  onBlur?: () => void;\n  onFocus?: () => void;\n  onChange?: (value: string) => void;\n  onPressEnter?: (value: string) => void;\n  onSelect?: (item: DataSourceItem) => void;\n}\n\nexport interface DataSourceItem {\n  text: string;\n  value: string | number;\n  [key: string]: any;\n}\n\nconst Autocomplete: React.ForwardRefRenderFunction<HTMLInputElement, Props> = (props, ref) => {\n  const {\n    value,\n    dataSource,\n    className,\n    onBlur,\n    onFocus,\n    onChange,\n    onPressEnter,\n    onSelect,\n    ...others\n  } = props;\n  let [_value, setValue] = useState('');\n  let [matchedDataSource, setMatchedDataSource] = useState<DataSourceItem[]>();\n  let [activeIndex, setActiveIndex] = useState(0);\n  let controlledValue = value ?? _value;\n\n  const inputRef = useRef<HTMLInputElement>();\n  React.useImperativeHandle(ref, () => inputRef.current!);\n\n  const updateValue = (value: string) => {\n    onChange && onChange(value);\n    setValue(value);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    updateValue(value);\n\n    if (!value) return setMatchedDataSource([]);\n    setActiveIndex(0);\n    setMatchedDataSource(\n      dataSource.filter((i) => {\n        return i.text.startsWith(value) && i.text !== value;\n      })\n    );\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (Object.values(KeyEnum).includes(e.key as KeyEnum)) {\n      e.preventDefault();\n    }\n\n    switch (e.key) {\n      case KeyEnum.TAB:\n        let matchedDataSourceItem = matchedDataSource?.[activeIndex];\n        if (!matchedDataSourceItem) return;\n\n        updateValue(matchedDataSourceItem.text);\n        onSelect && onSelect(matchedDataSourceItem);\n        setMatchedDataSource([]);\n        break;\n      case KeyEnum.ARROW_UP:\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx - 1 + matchedDataSource.length) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      case KeyEnum.ARROW_DOWN:\n        setActiveIndex((idx) => {\n          if (matchedDataSource?.length) {\n            return (idx + 1) % matchedDataSource.length;\n          }\n          return 0;\n        });\n        break;\n      case KeyEnum.ENTER:\n        onPressEnter && onPressEnter(controlledValue);\n        setMatchedDataSource([]);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const wrapClassString = classNames('ria-wrap', styles.wrap, className);\n  const inputClassString = classNames('ria-input', styles.input);\n  const completeClassString = classNames('ria-complete', styles.complete);\n\n  return (\n    <div className={wrapClassString}>\n      <input\n        ref={inputRef as any}\n        className={inputClassString}\n        value={controlledValue}\n        type=\"text\"\n        onBlur={onBlur}\n        onFocus={onFocus}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        {...others}\n      />\n      <div className={completeClassString}>{matchedDataSource?.[activeIndex]?.text}</div>\n    </div>\n  );\n};\n\nconst RefAutoComplete = React.forwardRef<HTMLInputElement, Props>(Autocomplete);\nexport default RefAutoComplete;\n"],"names":["KeyEnum","Autocomplete","props","ref","value","dataSource","className","onBlur","onFocus","onChange","onPressEnter","onSelect","others","_value","setValue","useState","matchedDataSource","setMatchedDataSource","activeIndex","setActiveIndex","controlledValue","inputRef","useRef","React","useImperativeHandle","current","updateValue","handleChange","e","target","filter","i","text","startsWith","handleKeyDown","Object","values","includes","key","preventDefault","TAB","matchedDataSourceItem","ARROW_UP","idx","length","ARROW_DOWN","ENTER","wrapClassString","classNames","styles","wrap","inputClassString","input","completeClassString","complete","type","onKeyDown","RefAutoComplete","forwardRef"],"mappings":"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"}